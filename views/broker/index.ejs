<%- include('../include/header') %>
<%- include('../include/sidebar') %>

<div class="p-6 bg-[#0f172a] text-white min-h-screen overflow-x-hidden">
  <!-- Header -->
  <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-6">
    <!-- Left: Title -->
    <h2 class="text-2xl font-bold">Connect Brokers</h2>

    <!-- Right: Dropdown + Search -->
    <div class="flex flex-col sm:flex-row sm:items-center gap-4 sm:ml-auto w-full sm:w-auto">
      <select id="marketSelect" onchange="filterBrokers()"
        class="bg-[#1e293b] px-3 py-2 rounded text-white w-full sm:w-auto">
        <option value="all">All Markets</option>
        <% marketCategories.forEach(mc => { %>
          <option value="<%= mc.id %>"><%= mc.market_name %></option>
        <% }) %>
      </select>

      <input type="text" id="brokerSearch" placeholder="Broker Search"
        class="bg-[#1e293b] px-4 py-2 w-full sm:w-[300px] rounded outline-none text-white placeholder:text-gray-400" />
    </div>
  </div>

  <!-- Broker List -->
  <div class="space-y-4" id="brokerList">
    <% brokers.forEach(b => { %>
      <div data-market="<%= b.market_id %>"
           class="broker-item flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 bg-[#1e293b] p-4 rounded">
        <!-- Left: Icon + Name + Connected badge -->
        <div class="flex items-center gap-3">
          <% if (b.icon_url) { %>
            <img src="<%= b.icon_url %>" class="w-6 h-6" />
          <% } %>
          <span class="text-lg"><%= b.name %></span>
          <% if (credentialsMap[b.id]) { %>
            <span class="ml-2 text-sm text-green-400 px-2 py-0.5 bg-green-800 rounded">Connected</span>
          <% } %>
        </div>

        <!-- Right: Actions -->
        <div class="flex flex-wrap gap-2">
          <% if (credentialsMap[b.id]) { %>
            <% if (b.name.includes("Zerodha")) { %>
              <button id="syncBtn"
                onclick="syncZerodhaTrades()"
                class="bg-blue-600 hover:bg-blue-700 px-3 sm:px-4 py-2 rounded text-white text-sm sm:text-base">
                Sync Zerodha Trades
              </button>
            <% } else if (b.name.includes("Delta")) { %>
              <button id="syncDeltaBtn"
                onclick="syncDeltaTrades()"
                class="bg-purple-600 hover:bg-purple-700 px-3 sm:px-4 py-2 rounded text-white text-sm sm:text-base">
                Sync Delta Trades
              </button>
            <% } else if (b.name.includes("Angel One")) { %>
              <button onclick="syncAngel()"
                class="bg-indigo-600 hover:bg-indigo-700 px-3 sm:px-4 py-2 rounded text-white text-sm sm:text-base">
                Sync Angel Trades
              </button>
            <% } else if (b.name.includes("Dhan")) { %>
              <button onclick="syncDhan()"
                class="bg-pink-600 hover:bg-pink-700 px-3 sm:px-4 py-2 rounded text-white text-sm sm:text-base">
                Sync Dhan Trades
              </button>
            <% } %>
          <% } %>

          <% if (b.name.includes("Zerodha")) { %>
            <% if (!credentialsMap[b.id]?.access_token) { %>
              <a href="/credentials/zerodha/login"
                 class="bg-yellow-500 hover:bg-yellow-600 text-sm px-3 py-2 rounded text-black">
                Login to Zerodha
              </a>
            <% } %>
          <% } %>

          <% if (credentialsMap[b.id]) { %>
            <button onclick="deleteCredential(<%= b.id %>)"
                    class="text-red-400 hover:underline text-sm px-2 py-2">
              Disconnect
            </button>
          <% } %>

          <button onclick="openBrokerModal(<%= b.id %>)"
                  class="bg-blue-600 hover:bg-blue-700 px-3 py-2 rounded text-sm">
            Connect
          </button>
        </div>
      </div>
    <% }) %>
  </div>
</div>

<!-- Modals -->
<% brokers.forEach(b => { %>
<div id="modal-<%= b.id %>" class="fixed inset-0 bg-black bg-opacity-60 hidden items-center justify-center z-50">
  <div class="bg-[#1e293b] p-6 rounded-lg w-full max-w-md relative text-white">
    <button onclick="closeModal(<%= b.id %>)" class="absolute top-3 right-3 text-white text-2xl">&times;</button>
    <h2 class="text-xl font-semibold mb-4">Connect to <%= b.name %></h2>

    <form onsubmit="submitBroker(event, <%= b.id %>)" id="form-<%= b.id %>" class="space-y-4">
      <input type="hidden" name="broker_id" value="<%= b.id %>" />
      <% if (b.name.includes("Zerodha")) { %>
        <input name="api_key" placeholder="API Key" class="input" value="<%= credentialsMap[b.id]?.api_key || '' %>">
        <input name="secret_key" placeholder="Secret Key" class="input" value="<%= credentialsMap[b.id]?.secret_key || '' %>">
        <input readonly value="<%= b.callback_url %>" class="input bg-[#334155]" />
      <% } else if (b.name.includes("Dhan")) { %>
        <input name="client_id" placeholder="Client ID" class="input" value="<%= credentialsMap[b.id]?.client_id || '' %>">
        <input name="secret_key" placeholder="Access Token" class="input" value="<%= credentialsMap[b.id]?.secret_key || '' %>">
        <input readonly value="<%= b.callback_url %>" class="input bg-[#334155]" />
      <% } else if (b.name.includes("Angel")) { %>
        <input name="api_key" placeholder="API Key" class="input" value="<%= credentialsMap[b.id]?.api_key || '' %>">
        <input name="secret_ket" placeholder="Secret key" class="input" value="<%= credentialsMap[b.id]?.secret_key || '' %>">
        <input name="client_id" placeholder="Client ID" class="input" value="<%= credentialsMap[b.id]?.client_id || '' %>">
        <input name="pin" placeholder="M-PIN" class="input" value="<%= credentialsMap[b.id]?.pin || '' %>">
        <input name="totp_secret" placeholder="TOTP Code" class="input" value="<%= credentialsMap[b.id]?.totp_secret || '' %>">
        <input readonly value="<%= b.callback_url %>" class="input bg-[#334155]" />
      <% } else if (b.name.includes("Delta")) { %>
        <input name="api_key" placeholder="API Key" class="input" value="<%= credentialsMap[b.id]?.api_key || '' %>">
        <input name="secret_key" placeholder="Secret Key" class="input" value="<%= credentialsMap[b.id]?.secret_key || '' %>">
        <input readonly value="<%= b.callback_url %>" class="input bg-[#334155]" />
      <% } else { %>
        <p>No fields configured for this broker.</p>
      <% } %>
      <button id="btn-<%= b.id %>" type="submit" class="bg-green-600 hover:bg-green-700 px-4 py-2 rounded">Save</button>
    </form>
  </div>
</div>
<% }) %>

<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">

<style>
  .input {
    width: 100%;
    padding: 10px 14px;
    border-radius: 6px;
    background: #0f172a;
    border: 1px solid #334155;
    color: white;
    outline: none;
  }
</style>

<script>
  function openBrokerModal(id) {
    const el = document.getElementById(`modal-${id}`);
    el.classList.remove('hidden');
    el.classList.add('flex');
  }

  function closeModal(id) {
    const el = document.getElementById(`modal-${id}`);
    el.classList.add('hidden');
    el.classList.remove('flex');
  }

  function submitBroker(e, id) {
    e.preventDefault();
    const btn = document.getElementById(`btn-${id}`);
    btn.disabled = true;
    btn.innerHTML = 'Saving...';

    const form = document.getElementById(`form-${id}`);
    const formData = new FormData(form);

    fetch('/credentials/save', {
      method: 'POST',
      body: formData
    }).then(res => res.json()).then(data => {
      btn.disabled = false;
      btn.innerHTML = 'Save';
      Toastify({
        text: data.message,
        duration: 3000,
        gravity: 'top',
        position: 'right',
        backgroundColor: data.success ? "#22c55e" : "#ef4444"
      }).showToast();
      if (data.success) location.reload();
    });
  }

  function deleteCredential(broker_id) {
    fetch('/credentials/delete', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ broker_id })
    }).then(res => res.json()).then(data => {
      Toastify({
        text: data.message,
        duration: 3000,
        gravity: 'top',
        position: 'right',
        backgroundColor: data.success ? "#f97316" : "#ef4444"
      }).showToast();
      if (data.success) location.reload();
    });
  }

  document.getElementById('brokerSearch').addEventListener('input', function () {
    const val = this.value.toLowerCase();
    document.querySelectorAll(".broker-item").forEach(div => {
      div.style.display = div.textContent.toLowerCase().includes(val) ? '' : 'none';
    });
  });

  function filterBrokers() {
    const selected = document.getElementById('marketSelect').value;
    document.querySelectorAll(".broker-item").forEach(div => {
      const market = div.getAttribute('data-market');
      div.style.display = (selected === 'all' || market === selected) ? '' : 'none';
    });
  }

  function syncZerodhaTrades() {
    const btn = document.getElementById("syncBtn");
    btn.disabled = true;
    btn.innerHTML = "Syncing...";
    fetch("/credentials/sync-zerodha")
      .then(res => res.text())
      .then(msg => {
        Toastify({ text: msg, duration: 4000, gravity: "top", position: "right",
          backgroundColor: msg.toLowerCase().includes("success") ? "#22c55e" : "#ef4444" }).showToast();
        btn.disabled = false;
        btn.innerHTML = "Sync Zerodha Trades";
      })
      .catch(() => {
        Toastify({ text: "Error syncing trades", duration: 4000, gravity: "top", position: "right",
          backgroundColor: "#ef4444" }).showToast();
        btn.disabled = false;
        btn.innerHTML = "Sync Zerodha Trades";
      });
  }

  function syncDeltaTrades() {
    const btn = document.getElementById("syncDeltaBtn");
    btn.disabled = true;
    btn.innerHTML = "Syncing...";
    fetch("/credentials/sync-delta")
      .then(res => res.text())
      .then(msg => {
        Toastify({ text: msg, duration: 4000, gravity: "top", position: "right",
          backgroundColor: msg.toLowerCase().includes("success") ? "#22c55e" : "#ef4444" }).showToast();
        btn.disabled = false;
        btn.innerHTML = "Sync Delta Trades";
      })
      .catch(() => {
        Toastify({ text: "Error syncing Delta trades", duration: 4000, gravity: "top", position: "right",
          backgroundColor: "#ef4444" }).showToast();
        btn.disabled = false;
        btn.innerHTML = "Sync Delta Trades";
      });
  }

  function syncAngel() {
    fetch("/credentials/sync-angel-trades")
      .then(r => r.text())
      .then(msg => Toastify({ text: msg, duration: 3000, gravity: "top", position: "right",
        backgroundColor: "#38bdf8" }).showToast());
  }

  function syncDhan() {
    fetch("/credentials/sync-dhan")
      .then(r => r.text())
      .then(msg => Toastify({ text: msg, duration: 3000, gravity: "top", position: "right",
        backgroundColor: "#f43f5e" }).showToast());
  }
</script>

<%- include('../include/footer') %>
