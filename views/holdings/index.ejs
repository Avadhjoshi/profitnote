<%- include('../include/header') %>
<%- include('../include/sidebar') %>

<div class="p-6">
  <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3 sm:gap-4 mb-6">
    <!-- Title -->
    <h1 class="text-xl sm:text-2xl font-semibold tracking-tight">Holding</h1>
  </div>

  <% 
    let totalInvested = 0;
    let totalMarketValue = 0;
    let totalPnL = 0;
    let todayChange =0;
    let currencySymbol = (market_type && marketCategories.find(m => m.id == market_type)?.market_name?.toLowerCase().includes('crypto')) ? '$' : '‚Çπ';
  %>
  <% holdings.forEach(h => {
    const invested = Math.round(h.quantity * h.average_price);
    const marketValue = Math.round(h.quantity * h.last_price);
    const pnl = Math.round(h.pnl);
    totalInvested += invested;
    totalMarketValue += marketValue;
    totalPnL += pnl;
    todayChange += Math.round(h.quantity * h.day_change);
  }) %>

  <!-- Total Cards -->
  <div class="flex gap-6 mb-8 flex-wrap lg:flex-nowrap">
    <!-- TODAY'S P&L -->
    <div class="flex-1 bg-[#1e293b] p-6 rounded-2xl shadow-xl flex items-center justify-between min-w-[250px]">
      <div>
        <div class="text-base text-gray-400 flex items-center gap-1">üìÜ TODAY'S P&L</div>
        <div class="text-2xl font-bold <%= todayChange >= 0 ? 'text-green-400' : 'text-red-400' %>">
          <%= todayChange >= 0 ? '‚ñ≤' : '‚ñº' %> <%= currencySymbol %><%= todayChange.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) %>
        </div>
      </div>
      <div class="text-4xl <%= todayChange >= 0 ? 'text-green-400' : 'text-red-400' %>">
        <%= todayChange >= 0 ? 'üöÄ' : 'üìâ' %>
      </div>
    </div>

    <!-- TOTAL P&L -->
    <div class="flex-1 bg-[#1e293b] p-6 rounded-2xl shadow-xl flex items-center justify-between min-w-[250px]">
      <div>
        <div class="text-base text-gray-400 flex items-center gap-1">üìâ TOTAL P&L</div>
        <div class="text-2xl font-bold <%= totalPnL >= 0 ? 'text-green-400' : 'text-red-400' %>">
          <%= totalPnL >= 0 ? '‚ñ≤' : '‚ñº' %> <%= currencySymbol %><%= totalPnL.toLocaleString('en-IN') %>
        </div>
      </div>
      <div class="text-4xl <%= totalPnL >= 0 ? 'text-green-400' : 'text-red-400' %>">
        <%= totalPnL >= 0 ? 'üìà' : 'üîª' %>
      </div>
    </div>

    <!-- INVESTED AMOUNT -->
    <div class="flex-1 bg-[#1e293b] p-6 rounded-2xl shadow-xl flex items-center justify-between min-w-[250px]">
      <div>
        <div class="text-base text-gray-400 flex items-center gap-1">üí∞ INVESTED AMOUNT</div>
        <div class="text-2xl font-bold text-white">
          <%= currencySymbol %><%= totalInvested.toLocaleString('en-IN') %>
        </div>
      </div>
      <div class="text-4xl text-white">üíº</div>
    </div>

    <!-- MARKET VALUE -->
    <div class="flex-1 bg-[#1e293b] p-6 rounded-2xl shadow-xl flex items-center justify-between min-w-[250px]">
      <div>
        <div class="text-base text-gray-400 flex items-center gap-1">üìä MARKET VALUE</div>
        <div class="text-2xl font-bold text-white">
          <%= currencySymbol %><%= totalMarketValue.toLocaleString('en-IN') %>
        </div>
      </div>
      <div class="text-4xl text-white">üè¶</div>
    </div>
  </div>

  <!-- Filters + Actions -->
  <form method="GET" class="flex items-center gap-2 mb-6 flex-wrap">
    <!-- Broker Filter -->
    <select name="broker" onchange="this.form.submit()" class="bg-[#1e293b] text-white px-3 py-2 rounded-md border border-gray-600 text-sm">
      <option value="">All Brokers</option>
      <% brokerList.forEach(b => { %>
        <option value="<%= b.id %>" <%= broker == b.id ? 'selected' : '' %>><%= b.name %></option>
      <% }) %>
    </select>

    <!-- Market Type Filter -->
    <select name="market_type" onchange="this.form.submit()" class="bg-[#1e293b] text-white px-3 py-2 rounded-md border border-gray-600 text-sm">
      <% marketCategories.forEach(cat => { %>
        <option value="<%= cat.id %>" <%= market_type == cat.id ? 'selected' : '' %>><%= cat.market_name %></option>
      <% }) %>
    </select>

    <!-- Sync Button -->
    <button id="syncHoldingsBtn" onclick="syncHoldings()" class="bg-blue-600 hover:bg-blue-700 text-white text-sm px-4 py-2 rounded-md transition-all">
      üîÑ Sync Holdings
    </button>

    <!-- AI Insight Button -->
    <button id="generateInsightBtn" onclick="generateInsight()" class="bg-purple-600 hover:bg-purple-700 text-white text-sm px-4 py-2 rounded-md transition-all">
      üîç Generate AI Insight
    </button>

    <!-- Export Button -->
    <button type="button" id="exportBtn" class="bg-green-600 hover:bg-green-700 text-white text-sm px-4 py-2 rounded-md transition-all">
      üìÑ Export to Excel
    </button>
  </form>

  <!-- AI Report Display -->
  <div id="aiReportContainer" class="mt-10 hidden bg-[#1e293b] border border-gray-600 rounded-xl p-6 mb-8">
    <div class="flex justify-between items-center mb-3 text-sm text-gray-400">
      <span id="generatedAt">Generated just now</span>
      <button onclick="downloadAIReport()" class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded">
        Download PDF
      </button>
    </div>
    <!-- styled markdown content -->
    <div id="aiReportContent" class="prose ai-prose prose-invert prose-sm max-w-none whitespace-pre-wrap text-white"></div>
  </div>

  <!-- Holdings Table -->
  <% if (holdings.length === 0) { %>
    <div class="text-gray-400">No holdings found.</div>
  <% } else { %>
    <div class="overflow-x-auto">
      <table id="holdingsTable" class="min-w-full text-sm text-white bg-[#1e293b] rounded-xl overflow-hidden">
        <thead>
          <tr class="bg-[#334155] text-left text-xs uppercase text-gray-300">
            <th class="px-4 py-2 cursor-pointer" onclick="sortTable(1)">Broker <span>‚ñ≤‚ñº</span></th>
            <th class="px-4 py-2 cursor-pointer" onclick="sortTable(0)">Symbol <span>‚ñ≤‚ñº</span></th>
            <th class="px-4 py-2 cursor-pointer" onclick="sortTable(2)">Qty <span>‚ñ≤‚ñº</span></th>
            <th class="px-4 py-2 cursor-pointer" onclick="sortTable(3)">T1 Qty <span>‚ñ≤‚ñº</span></th>
            <th class="px-4 py-2 cursor-pointer" onclick="sortTable(4)">Avg Price <span>‚ñ≤‚ñº</span></th>
            <th class="px-4 py-2 cursor-pointer" onclick="sortTable(5)">Last Price <span>‚ñ≤‚ñº</span></th>
            <th class="px-4 py-2 cursor-pointer" onclick="sortTable(6)">P&L <span>‚ñ≤‚ñº</span></th>
            <th class="px-4 py-2 cursor-pointer" onclick="sortTable(7)">Invested Amount <span>‚ñ≤‚ñº</span></th>
            <th class="px-4 py-2 cursor-pointer" onclick="sortTable(8)">Market Value <span>‚ñ≤‚ñº</span></th>
          </tr>
        </thead>
        <tbody>
          <% holdings.forEach(h => {
            const invested = Math.round(h.quantity * h.average_price);
            const marketValue = Math.round(h.quantity * h.last_price);
            const pnl = Math.round(h.pnl);
          %>
          <tr class="border-b border-gray-700 hover:bg-[#2d3748]">
            <td class="px-4 py-2"><%= h.Broker?.name || '-' %></td>
            <td class="px-4 py-2"><%= h.tradingsymbol %></td>
            <td class="px-4 py-2"><%= h.quantity %></td>
            <td class="px-4 py-2"><%= h.t1_quantity %></td>
            <td class="px-4 py-2"><%= currencySymbol %><%= Math.round(h.average_price).toLocaleString('en-IN') %></td>
            <td class="px-4 py-2"><%= currencySymbol %><%= Math.round(h.last_price).toLocaleString('en-IN') %></td>
            <td class="px-4 py-2 <%= pnl >= 0 ? 'text-green-400' : 'text-red-400' %>">
              <%= pnl >= 0 ? '‚ñ≤' : '‚ñº' %> <%= currencySymbol %><%= pnl.toLocaleString('en-IN') %>
            </td>
            <td class="px-4 py-2"><%= currencySymbol %><%= invested.toLocaleString('en-IN') %></td>
            <td class="px-4 py-2"><%= currencySymbol %><%= marketValue.toLocaleString('en-IN') %></td>
          </tr>
          <% }) %>
        </tbody>
        <tfoot class="bg-[#334155] font-semibold text-white">
          <tr>
            <td class="px-4 py-2" colspan="2">Total</td>
            <td class="px-4 py-2"><%= holdings.reduce((sum, h) => sum + h.quantity, 0) %></td>
            <td class="px-4 py-2"><%= holdings.reduce((sum, h) => sum + h.t1_quantity, 0) %></td>
            <td colspan="2"></td>
            <td class="px-4 py-2 <%= totalPnL >= 0 ? 'text-green-400' : 'text-red-400' %>">
              <%= totalPnL >= 0 ? '‚ñ≤' : '‚ñº' %> <%= currencySymbol %><%= totalPnL.toLocaleString('en-IN') %>
            </td>
            <td class="px-4 py-2"><%= currencySymbol %><%= totalInvested.toLocaleString('en-IN') %></td>
            <td class="px-4 py-2"><%= currencySymbol %><%= totalMarketValue.toLocaleString('en-IN') %></td>
          </tr>
        </tfoot>
      </table>
    </div>
  <% } %>
</div>

<!-- SheetJS (Excel Export) -->
<script src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"></script>
<script>
  document.getElementById('exportBtn').addEventListener('click', function () {
    const table = document.getElementById('holdingsTable');
    const wb = XLSX.utils.table_to_book(table, { sheet: "Holdings" });
    XLSX.writeFile(wb, 'holdings_export.xlsx');
  });

  document.querySelectorAll('#holdingsTable th').forEach(header => {
    header.addEventListener('click', () => {
      const table = header.closest('table');
      const index = [...header.parentNode.children].indexOf(header);
      const rows = [...table.querySelectorAll('tbody tr')];
      const asc = !header.classList.contains('asc');

      rows.sort((a, b) => {
        const aText = a.children[index].innerText.replace(/[^\d.-]/g, '');
        const bText = b.children[index].innerText.replace(/[^\d.-]/g, '');
        return asc ? aText - bText : bText - aText;
      });

      table.querySelectorAll('th').forEach(th => th.classList.remove('asc', 'desc'));
      header.classList.add(asc ? 'asc' : 'desc');
      const tbody = table.querySelector('tbody');
      rows.forEach(row => tbody.appendChild(row));
    });
  });

  function syncHoldings() {
    const btn = document.getElementById("syncHoldingsBtn");
    btn.disabled = true;
    btn.innerHTML = "Syncing...";
    fetch("/credentials/sync-zerodha-holdings")
      .then(res => res.text())
      .then(msg => {
        Toastify({
          text: msg,
          duration: 3000,
          gravity: "top",
          position: "right",
          backgroundColor: msg.includes("‚úÖ") ? "#22c55e" : "#ef4444",
        }).showToast();
        btn.disabled = false;
        btn.innerHTML = "üîÑ Sync Holdings";
        if (msg.includes("‚úÖ")) setTimeout(() => location.reload(), 1500);
      })
      .catch(err => {
        Toastify({
          text: "‚ùå Error syncing holdings",
          duration: 3000,
          gravity: "top",
          position: "right",
          backgroundColor: "#ef4444",
        }).showToast();
        btn.disabled = false;
        btn.innerHTML = "üîÑ Sync Holdings";
      });
  }

  function generateInsight() {
    const btn = document.getElementById('generateInsightBtn');
    btn.disabled = true;
    btn.innerText = '‚è≥ Generating...';

    fetch('/ai/analyze-holdings')
      .then(res => res.json())
      .then(data => {
        if (data.analysis) {
          const container = document.getElementById('aiReportContainer');
          const content = document.getElementById('aiReportContent');
          const date = document.getElementById('generatedAt');
          content.innerHTML = marked.parse(data.analysis);
          date.innerText = `Generated: ${new Date().toLocaleString()}`;
          container.classList.remove('hidden');
          Toastify({
            text: "‚úÖ AI Insight Generated",
            duration: 4000,
            gravity: "top",
            position: "right",
            backgroundColor: "#22c55e"
          }).showToast();
        } else {
          Toastify({
            text: data.error,
            duration: 4000,
            gravity: "top",
            position: "right",
            backgroundColor: "orange"
          }).showToast();
        }
      })
      .catch(err => {
        console.error(err);
        Toastify({
          text: "‚ùå Failed to generate AI insight",
          duration: 4000,
          gravity: "top",
          position: "right",
          backgroundColor: "#ef4444"
        }).showToast();
      })
      .finally(() => {
        btn.disabled = false;
        btn.innerText = 'üîç Generate AI Insight';
      });
  }

  function downloadAIReport() {
    const element = document.getElementById('aiReportContainer');
    html2pdf().from(element).set({
      margin: 0.5,
      filename: 'AI-Holding-Insight.pdf',
      image: { type: 'jpeg', quality: 0.98 },
      html2canvas: { scale: 2 },
      jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }
    }).save();
  }
</script>

<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>

<style>
  /* AI Report typography tweaks (scoped) */
  .ai-prose h3 {
    margin-top: 1.25rem;
    margin-bottom: .75rem;
    font-size: 1.125rem;
    line-height: 1.5rem;
    font-weight: 800;
    letter-spacing: .01em;
    color:#fff;
    position: relative;
    padding-left: .875rem;
  }
  .ai-prose h3::before {
    content:'';
    position:absolute;
    left:0; top:.15rem; bottom:.15rem;
    width:4px;
    border-radius:999px;
    background: linear-gradient(180deg,#3b82f6 0%, #6366f1 100%);
    opacity:.9;
  }

  /* Only top-level UL and LI get card styling */
  .ai-prose > ul {
    list-style:none;
    margin:.25rem 0 1rem 0;
    padding:0;
    display:grid;
    gap:.6rem;
  }
  .ai-prose > ul > li {
    list-style:none;
    padding:.85rem 1rem;
    background: rgba(255,255,255,.04);
    border:1px solid rgba(148,163,184,.16);
    border-radius:.75rem;
    box-shadow:0 4px 14px rgba(2,6,23,.25);
    transition:transform .18s ease, box-shadow .18s ease, border-color .18s ease;
  }
  .ai-prose > ul > li:hover {
    transform: translateY(-2px);
    border-color: rgba(99,102,241,.45);
    box-shadow:0 8px 20px rgba(2,6,23,.35);
  }

  /* Nested lists stay plain */
  .ai-prose ul ul {
    list-style: disc;
    margin:.5rem 0 .25rem 1.25rem;
    padding:0;
    display:block;
  }
  .ai-prose ul ul > li {
    background:transparent;
    border:0;
    border-radius:0;
    padding:.25rem 0;
    box-shadow:none;
    transform:none;
  }
  
  .ai-prose strong {
    position: relative;
    font-weight: 600;
    color: #93c5fd; /* light blue */
    padding-bottom: 1px;
  }
  .ai-prose strong::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, #3b82f6 0%, #6366f1 100%);
    opacity: 0.7;
    border-radius: 2px;
  }

</style>

<%- include('../include/footer') %>
