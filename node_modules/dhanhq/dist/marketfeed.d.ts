/// <reference types="node" />
import { Buffer } from 'buffer';
export declare const IDX = 0;
export declare const NSE = 1;
export declare const NSE_FNO = 2;
export declare const NSE_CURR = 3;
export declare const BSE = 4;
export declare const MCX = 5;
export declare const BSE_CURR = 7;
export declare const BSE_FNO = 8;
export declare const Ticker = 15;
export declare const Quote = 17;
export declare const Depth = 19;
export declare class DhanFeed {
    clientId: string;
    accessToken: string;
    instruments: any[];
    subscriptionCode: number;
    private onConnect;
    private onMessage;
    private onClose;
    private ws;
    private sdkHelper;
    constructor(clientId: string, accessToken: string, instruments: any[], subscriptionCode: number, onConnect?: any, onMessage?: any, onClose?: any);
    padWithZeros(buffer: Buffer, length: number): Buffer;
    authorize(): Promise<void>;
    connect(): Promise<void>;
    close(): Promise<void>;
    private send;
    private createHeader;
    private subscribeSymbols;
    subscribe(feedRequestCode: number, symbols: any[]): Promise<void>;
    private createSubscriptionPacket;
    unsubscribe(feedRequestCode: number, symbols: any): Promise<void>;
    private createUnsubscribePacket;
    private processTickerPacket;
    private processPrevClosePacket;
    private processMarketStatusPacket;
    private processQuotePacket;
    private processOIDataPacket;
    private processMarketDepthPacket;
    private processServerDisConnectionPacket;
}
